{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCircularDrag = void 0;\n\nvar react_1 = require(\"react\");\n\nvar _1 = require(\"./\");\n\nfunction useCircularDrag(ref) {\n  var _a = _1.useCircularInputContext(),\n      onChange = _a.onChange,\n      onChangeEnd = _a.onChangeEnd,\n      getValueFromPointerEvent = _a.getValueFromPointerEvent;\n\n  var _b = react_1.useState(false),\n      isDragging = _b[0],\n      setDragging = _b[1];\n\n  var handleStart = react_1.useCallback(function (e) {\n    if (!onChange) return;\n    stopEvent(e);\n    setDragging(true);\n    var nearestValue = getValueFromPointerEvent(e);\n    onChange(nearestValue);\n  }, [onChange, setDragging, getValueFromPointerEvent]);\n  var handleMove = react_1.useCallback(function (e) {\n    stopEvent(e);\n    var nearestValue = getValueFromPointerEvent(e);\n    onChange(nearestValue);\n  }, [onChange, getValueFromPointerEvent]);\n  var handleEnd = react_1.useCallback(function (e) {\n    stopEvent(e);\n    setDragging(false);\n    if (!onChangeEnd) return;\n    var nearestValue = getValueFromPointerEvent(e);\n    onChangeEnd(nearestValue);\n  }, [onChangeEnd, getValueFromPointerEvent]); // we can't just use React for this due to needing { passive: false } to prevent touch devices scrolling\n\n  react_1.useEffect(function () {\n    var node = ref.current;\n    if (!node) return;\n    addStartListeners(node, handleStart);\n    return function () {\n      if (!node) return;\n      removeStartListeners(node, handleStart);\n    };\n  }, [ref, handleStart]);\n  react_1.useEffect(function () {\n    if (!isDragging) return;\n    addListeners(handleMove, handleEnd);\n    return function () {\n      removeListeners(handleMove, handleEnd);\n    };\n  }, [isDragging, handleMove, handleEnd]);\n  return {\n    isDragging: isDragging\n  };\n}\n\nexports.useCircularDrag = useCircularDrag;\n\nfunction addStartListeners(element, onStart) {\n  element.addEventListener('mousedown', onStart, {\n    passive: false\n  });\n  element.addEventListener('touchstart', onStart, {\n    passive: false\n  });\n}\n\nfunction removeStartListeners(element, onStart) {\n  element.removeEventListener('mousedown', onStart);\n  element.removeEventListener('touchstart', onStart);\n}\n\nfunction addListeners(onMove, onEnd) {\n  document.addEventListener('mousemove', onMove, {\n    passive: false\n  });\n  document.addEventListener('touchmove', onMove, {\n    passive: false\n  });\n  document.addEventListener('mouseup', onEnd, {\n    passive: false\n  });\n  document.addEventListener('touchend', onEnd, {\n    passive: false\n  });\n}\n\nfunction removeListeners(onMove, onEnd) {\n  document.removeEventListener('mousemove', onMove);\n  document.removeEventListener('touchmove', onMove);\n  document.removeEventListener('mouseup', onEnd);\n  document.removeEventListener('touchend', onEnd);\n}\n\nvar stopEvent = function stopEvent(e) {\n  e.stopPropagation();\n\n  if (e.cancelable) {\n    e.preventDefault();\n  }\n};","map":null,"metadata":{},"sourceType":"script"}